add string              DONE
add getattribute()
add type()

split rule/language grammar

update ADVANCE

=== future ===
define BOOLEAN!!
if *value doesn't exist, need to do other things

=== 6.30 ===
mod attr assign to wrap DONE
  add DUP               DONE
add GET                 DONE
mod RETRIEVE to take v  DONE
add RETRIEVE            DONE
add is assignment       DONE
mod GOTOIFN to take v   DONE
add GOTOIFN             DONE
wrap built-in method
Q lookup and get returns set but want m/v
Q what does alloc() do? take in lbl and return memloc?
Q do we want to create empty obj when wrapping, and move getobj to micro instructions?

=== 7.3 ===
mod WRAP to take 3 args DONE
add ALLOC, mod STORE    DONE
mod RETRIEVE to WRAP    DONE
add scope to BIND       DONE
mod getobj              DONE
  make WRAP a macro     DONE
  fix RAISE             DONE

=== 7.5 ===
2 args for PUSH         DONE
mod graph               DONE
add getscope func       DONE
fix magics              DONE
Q Advance Pop, Raise, Assign, Attr Assign, Return - no scope to bind to?
add bool                DONE
breakdown magic         DONE
Assert type             DONE
Sum micro-instructions  DONE (sort of)

=== 7.6 ===
fix getitem             DONE
assert magic arguments  DONE
add type()              DONE
make macros for magic   DONE
fix call rules          DONE
add magic graph rules   DONE
fix retrieve            DONE
add call()              DONE
add bool()
  magic                 DONE
  micro-instruction     DONE
  helper                DONE
fix GOTOIFN             DONE
fix get() in graph
get rid of boolean
